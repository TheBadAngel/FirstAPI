// <auto-generated />
using System;
using FirstAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstAPI.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20251002123556_AddBookReview")]
    partial class AddBookReview
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            Title = "The Great Gatsby",
                            Year = 1925
                        },
                        new
                        {
                            Id = 2,
                            Author = "Harper Lee",
                            Title = "To Kill a Mockingbird",
                            Year = 1960
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            Title = "1984",
                            Year = 1949
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jane Austen",
                            Title = "Pride and Prejudice",
                            Year = 1813
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.D. Salinger",
                            Title = "The Catcher in the Rye",
                            Year = 1951
                        },
                        new
                        {
                            Id = 6,
                            Author = "Gabriel García Márquez",
                            Title = "One Hundred Years of Solitude",
                            Year = 1967
                        },
                        new
                        {
                            Id = 7,
                            Author = "Aldous Huxley",
                            Title = "Brave New World",
                            Year = 1932
                        },
                        new
                        {
                            Id = 8,
                            Author = "J.R.R. Tolkien",
                            Title = "The Lord of the Rings",
                            Year = 1954
                        },
                        new
                        {
                            Id = 9,
                            Author = "J.K. Rowling",
                            Title = "Harry Potter and the Philosopher's Stone",
                            Year = 1997
                        },
                        new
                        {
                            Id = 10,
                            Author = "J.R.R. Tolkien",
                            Title = "The Hobbit",
                            Year = 1937
                        },
                        new
                        {
                            Id = 11,
                            Author = "Herman Melville",
                            Title = "Moby-Dick",
                            Year = 1851
                        },
                        new
                        {
                            Id = 12,
                            Author = "Leo Tolstoy",
                            Title = "War and Peace",
                            Year = 1869
                        },
                        new
                        {
                            Id = 13,
                            Author = "Homer",
                            Title = "The Odyssey",
                            Year = -800
                        },
                        new
                        {
                            Id = 14,
                            Author = "Fyodor Dostoevsky",
                            Title = "Crime and Punishment",
                            Year = 1866
                        },
                        new
                        {
                            Id = 15,
                            Author = "Stephen King",
                            Title = "The Shining",
                            Year = 1977
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Beautifully written with complex characters, though the pacing felt slow at times.",
                            ReviewerName = "Jane Smith"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "A powerful exploration of racial injustice that remains relevant today.",
                            ReviewerName = "Robert Johnson"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Orwell's dystopian vision is disturbingly prescient. A must-read for everyone.",
                            ReviewerName = "Sarah Williams"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Austen's wit and social commentary shine in this timeless romance.",
                            ReviewerName = "Emily Chen"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Holden Caulfield's voice is authentic and raw, speaking to teenage alienation across generations.",
                            ReviewerName = "Michael Brown"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Magical realism at its finest. A multi-generational epic that blends fantasy with history.",
                            ReviewerName = "Sofia Rodriguez"
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Huxley's vision of a pleasure-obsessed society feels increasingly relevant.",
                            ReviewerName = "Thomas Wilson"
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "The definitive fantasy epic that created a genre. Unmatched in scope and imagination.",
                            ReviewerName = "Alex Morgan"
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "The beginning of a magical journey that captivated a generation. Perfect for readers of all ages.",
                            ReviewerName = "Lily Zhang"
                        },
                        new
                        {
                            Id = 10,
                            BookId = 10,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "A charming adventure story that serves as the perfect introduction to Middle-earth.",
                            ReviewerName = "David Lee"
                        },
                        new
                        {
                            Id = 11,
                            BookId = 11,
                            Rating = 3,
                            ReviewDate = new DateTime(2023, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "A monumental work of literature, though the extensive whaling details can be challenging for modern readers.",
                            ReviewerName = "Amanda Carter"
                        },
                        new
                        {
                            Id = 12,
                            BookId = 12,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "Tolstoy's masterpiece weaves personal stories with historical events to create a panoramic view of Russian society.",
                            ReviewerName = "Gregory Patel"
                        },
                        new
                        {
                            Id = 13,
                            BookId = 13,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "The original adventure story that has influenced countless works. Homer's epic remains powerful and engaging.",
                            ReviewerName = "Olivia Martinez"
                        },
                        new
                        {
                            Id = 14,
                            BookId = 14,
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "A psychological thriller that delves deep into guilt, redemption, and human nature.",
                            ReviewerName = "Nathan Kim"
                        },
                        new
                        {
                            Id = 15,
                            BookId = 15,
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewText = "King's haunted hotel story is terrifying on multiple levels. A masterclass in psychological horror.",
                            ReviewerName = "Rachel Thompson"
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.BookReview", b =>
                {
                    b.HasOne("FirstAPI.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("FirstAPI.Models.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
